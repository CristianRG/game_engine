import{_ as p,c as t,b as a,w as c,d as n,a as r,e as s,r as e,o as i}from"./app.bb9e1715.js";const E=JSON.parse('{"title":"Welcome to @cristianrg/game_engine","description":"","frontmatter":{},"headers":[{"level":2,"title":"What is this package?","slug":"what-is-this-package","link":"#what-is-this-package","children":[]},{"level":2,"title":"Live Example","slug":"live-example","link":"#live-example","children":[]}],"relativePath":"index.md","lastUpdated":1744166887000}'),y={name:"index.md"},D=r(`<h1 id="welcome-to-cristianrg-game-engine" tabindex="-1">Welcome to @cristianrg/game_engine <a class="header-anchor" href="#welcome-to-cristianrg-game-engine" aria-hidden="true">#</a></h1><h2 id="what-is-this-package" tabindex="-1">What is this package? <a class="header-anchor" href="#what-is-this-package" aria-hidden="true">#</a></h2><p>A game engine written in TypeScript and transpiled to JavaScript.<br> It includes features that allow you to create games directly from the browser in a simple and easy way, thanks to the flexibility to modify or scale the source code.</p><p>Here is a quick and simple example using TypeScript on how to use it in your project:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Engine</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Entity</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Transform</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Renderable</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Entities</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">GlobalState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@cristianrg/game_engine</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> canvas </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">canvas</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLCanvasElement</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Engine</span><span style="color:#A6ACCD;">(canvas)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> scene </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> GlobalState</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getInstance</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">currentScene</span><span style="color:#89DDFF;">!;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> entity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Entity</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Transform</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Renderable</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">scene</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Entities</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">scene</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getComponent</span><span style="color:#A6ACCD;">(Entities)</span><span style="color:#89DDFF;">!.</span><span style="color:#82AAFF;">addEntity</span><span style="color:#A6ACCD;">(entity)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">engine</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="live-example" tabindex="-1">Live Example <a class="header-anchor" href="#live-example" aria-hidden="true">#</a></h2>`,6),F=s("ul",null,[s("li",null,[s("strong",null,"Engine"),n(": The main class responsible for the engine's functionality.")]),s("li",null,[s("strong",null,"GlobalState"),n(": A class instantiated when the engine starts. It allows you to retrieve some instantiated objects.")]),s("li",null,[s("strong",null,"Scene"),n(": This class is used as a reference when rendering elements on the canvas.")]),s("li",null,[s("strong",null,"Entity"),n(": This class is used to create entities within the engine. An example could be a "),s("code",null,"Player")])],-1);function A(C,d,h,g,m,u){const l=e("GameEnginePlayground"),o=e("ClientOnly");return i(),t("div",null,[D,a(o,null,{default:c(()=>[a(l)]),_:1}),n(" The code above demonstrates the core features of the engine: "),F])}const f=p(y,[["render",A]]);export{E as __pageData,f as default};
